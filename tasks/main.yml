- name: create parca system group
  group:
    name: "{{ parca_server_system_group }}"
    system: true
    state: present

- name: create parca system user
  user:
    name: "{{ parca_server_system_user }}"
    system: true
    shell: "/usr/sbin/nologin"
    group: "{{ parca_server_system_group }}"
    createhome: false

- name: "Download parca files"
  become: false
  get_url:
    url: "https://github.com/parca-dev/parca/releases/download/v{{ parca_server_version }}/parca_{{ parca_server_version }}_Linux_x86_64.tar.gz"
    dest: "/tmp/"
  delegate_to: localhost

- name: "Create temporary directory"
  become: false
  file:
    path: /tmp/parca-{{ parca_server_version }}-linux-amd64
    state: directory
  delegate_to: localhost

- name: "Unarchive parca files"
  become: false
  unarchive:
    src: "/tmp/parca_{{ parca_server_version }}_Linux_x86_64.tar.gz"
    remote_src: yes
    dest: /tmp/parca-{{ parca_server_version }}-linux-amd64
    creates: "/tmp/parca-{{ parca_server_version }}-linux-amd64/parca-linux-amd64"
  delegate_to: localhost
  check_mode: false

- name: propagate parca binary
  copy:
    src: "/tmp/parca-{{ parca_server_version }}-linux-amd64/parca"
    dest: "/usr/local/bin/parca"
    mode: 0755
    owner: "{{ parca_server_system_user }}"
    group: "{{ parca_server_system_group }}"
  notify:
    - restart parca-server

- name: configure parca
  template:
    src: parca.yml.j2
    dest: /etc/parca.yml
    owner: root
    group: root
    mode: 0644
  notify:
    - restart parca-server

- name: create systemd service unit
  template:
    src: parca.service.j2
    dest: /etc/systemd/system/parca.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart parca-server

- name: Enable and unmask parca service
  systemd:
    daemon_reload: true
    name: parca
    state: started
    enabled: yes
    masked: no
